apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: default
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
              readOnly: true
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
      volumes:
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboard-json
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 80
      targetPort: 3000
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: default
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-json
  namespace: default
data:
  app-dashboard.json: |
    {
      "title": "Application Monitoring Dashboard",
      "uid": "full-app-monitoring",
      "timezone": "browser",
      "schemaVersion": 30,
      "refresh": "30s",
      "panels": [
        {
          "title": "Node.js - Temps de réponse",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 24, "x": 0, "y": 0 },
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
          },
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[1m])) by (le, endpoint)",
              "legendFormat": "{{route}} (p95)",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "s", "title": "Temps de réponse", "min": 0 },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Taux d'erreur",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 24, "x": 0, "y": 10 },
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom"
            }
          },
          "targets": [
            {
              "expr": "sum(rate(http_requests_total{status=~\"5..\"}[1m])) by (endpoint) / sum(rate(http_requests_total[1m])) by (endpoint)",
              "legendFormat": "{{endpoint}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "percentunit", "title": "Taux d'erreur", "min": 0, "max": 1 },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Utilisation CPU",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 12, "x": 0, "y": 20 },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  { "value": null, "color": "green" },
                  { "value": 80, "color": "red" }
                ]
              }
            }
          },
          "targets": [
            {
              "expr": "rate(process_cpu_seconds_total[1m]) * 100",
              "legendFormat": "CPU Usage",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "percent", "title": "CPU %", "min": 0, "max": 100 },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Utilisation Mémoire",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 12, "x": 12, "y": 20 },
          "targets": [
            {
              "expr": "process_resident_memory_bytes / (1024 * 1024)",
              "legendFormat": "Memory",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "bytes", "title": "Mémoire (MB)", "min": 0 },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - CPU Usage",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 24, "x": 0, "y": 30 },
          "targets": [
            {
              "expr": "rate(redis_cpu_sys_seconds_total[1m]) + rate(redis_cpu_user_seconds_total[1m])",
              "legendFormat": "Total CPU",
              "refId": "A"
            },
            {
              "expr": "rate(redis_cpu_sys_seconds_total[1m])",
              "legendFormat": "System CPU",
              "refId": "B"
            },
            {
              "expr": "rate(redis_cpu_user_seconds_total[1m])",
              "legendFormat": "User CPU",
              "refId": "C"
            }
          ],
          "yaxes": [
            { "format": "short", "title": "CPU Seconds", "min": 0 },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - Memory Usage",
          "type": "timeseries",
          "gridPos": { "h": 10, "w": 24, "x": 0, "y": 40 },
          "targets": [
            {
              "expr": "redis_memory_used_bytes / (1024 * 1024)",
              "legendFormat": "Used Memory",
              "refId": "A"
            },
            {
              "expr": "redis_memory_used_rss_bytes / (1024 * 1024)",
              "legendFormat": "RSS Memory",
              "refId": "B"
            }
          ],
          "yaxes": [
            { "format": "bytes", "title": "MB", "min": 0 },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - Latency by Command",
          "type": "timeseries",
          "gridPos": { "h": 12, "w": 24, "x": 0, "y": 50 },
          "targets": [
            {
              "expr": "redis_latency_percentiles_usec{quantile=\"0.99\"}",
              "legendFormat": "{{cmd}} (p99)",
              "refId": "A"
            },
            {
              "expr": "redis_latency_percentiles_usec{quantile=\"0.50\"}",
              "legendFormat": "{{cmd}} (p50)",
              "refId": "B"
            }
          ],
          "yaxes": [
            { "format": "µs", "title": "Latency (µs)", "min": 0 },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - Connected Clients",
          "type": "stat",
          "gridPos": { "h": 6, "w": 8, "x": 0, "y": 62 },
          "targets": [
            {
              "expr": "redis_connected_clients",
              "legendFormat": "Clients",
              "refId": "A"
            }
          ],
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": ["lastNotNull"],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  { "value": null, "color": "green" },
                  { "value": 50, "color": "orange" },
                  { "value": 100, "color": "red" }
                ]
              }
            }
          }
        }
      ],
      "templating": {
        "list": [
          {
            "name": "namespace",
            "type": "query",
            "query": "label_values(kube_pod_info, namespace)"
          },
          {
            "name": "redis_cmd",
            "type": "query",
            "query": "label_values(redis_latency_percentiles_usec, cmd)"
          }
        ]
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = localhost
    root_url = http://localhost:3000
    [auth]
    disable_login_form = false
    disable_signout_menu = false
    [security]
    admin_password = admin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: default
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server:9090
        access: proxy
        isDefault: true
        version: 1
        editable: true

