apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: default
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
              readOnly: true
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
      volumes:
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboard-json
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 80
      targetPort: 3000
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: default
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-json
  namespace: default
data:
  app-dashboard.json: |
    {
      "title": "Application Monitoring Dashboard",
      "uid": "full-app-monitoring",
      "timezone": "browser",
      "schemaVersion": 30,
      "refresh": "30s",
      "panels": [
        {
          "title": "Node.js - Temps de réponse",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 },
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[1m])) by (le, endpoint))",
              "legendFormat": "{{endpoint}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "s", "title": "Temps de réponse" },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Taux d'erreur",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 },
          "targets": [
            {
              "expr": "sum(rate(http_requests_total{status=~\"5..\"}[1m]) by (endpoint) / sum(rate(http_requests_total[1m])) by (endpoint)",
              "legendFormat": "{{endpoint}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "percentunit", "title": "Taux d'erreur" },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Utilisation CPU",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 0, "y": 8 },
          "targets": [
            {
              "expr": "rate(process_cpu_seconds_total[1m]) * 100",
              "legendFormat": "CPU Usage",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "percent", "title": "CPU %" },
            { "format": "short" }
          ]
        },
        {
          "title": "Node.js - Utilisation Mémoire",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 12, "y": 8 },
          "targets": [
            {
              "expr": "process_resident_memory_bytes / (1024 * 1024)",
              "legendFormat": "Memory",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "bytes", "title": "Mémoire (MB)" },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - Latence",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 0, "y": 16 },
          "targets": [
            {
              "expr": "redis_latency_microseconds",
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "µs", "title": "Latence" },
            { "format": "short" }
          ]
        },
        {
          "title": "Redis - Utilisation CPU/Mémoire",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 12, "y": 16 },
          "targets": [
            {
              "expr": "redis_cpu_usage",
              "legendFormat": "CPU {{instance}}",
              "refId": "A"
            },
            {
              "expr": "redis_memory_usage_bytes / (1024 * 1024)",
              "legendFormat": "Memory {{instance}}",
              "refId": "B"
            }
          ],
          "yaxes": [
            { "format": "percent", "title": "CPU %" },
            { "format": "bytes", "title": "Mémoire (MB)" }
          ]
        },
        {
          "title": "Redis - Connexions actives",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 0, "y": 24 },
          "targets": [
            {
              "expr": "redis_connected_clients",
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "short", "title": "Connexions" },
            { "format": "short" }
          ]
        },
        {
          "title": "Kubernetes - Pods actifs",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 12, "y": 24 },
          "targets": [
            {
              "expr": "sum(kube_pod_status_phase{phase=\"Running\"}) by (namespace)",
              "legendFormat": "{{namespace}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "short", "title": "Pods" },
            { "format": "short" }
          ]
        },
        {
          "title": "Kubernetes - Événements de scaling",
          "type": "graph",
          "gridPos": { "h": 8, "w": 12, "x": 0, "y": 32 },
          "targets": [
            {
              "expr": "changes(kube_deployment_spec_replicas[1h])",
              "legendFormat": "{{deployment}}",
              "refId": "A"
            }
          ],
          "yaxes": [
            { "format": "short", "title": "Changements" },
            { "format": "short" }
          ]
        }
      ],
      "templating": {
        "list": [
          {
            "name": "namespace",
            "label": "Namespace",
            "type": "query",
            "query": "label_values(kube_pod_info, namespace)"
          }
        ]
      },
      "annotations": {
        "list": [
          {
            "name": "Deployments",
            "type": "dashboard",
            "query": "changes(kube_deployment_spec_replicas[1h]) > 0"
          }
        ]
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = localhost
    root_url = http://localhost:3000
    [auth]
    disable_login_form = false
    disable_signout_menu = false
    [security]
    admin_password = admin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: default
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server:9090
        access: proxy
        isDefault: true
        version: 1
        editable: true

